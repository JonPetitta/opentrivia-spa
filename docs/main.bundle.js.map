{"version":3,"sources":["c:/Projects/OpenTrivia/OpenTriviaApp/src/$_gendir lazy","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.component.css","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.component.html","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.component.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.module.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/open-trivia-db.service.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otmenu/otmenu.component.css","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otmenu/otmenu.component.html","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otmenu/otmenu.component.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otquestion/otquestion.component.css","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otquestion/otquestion.component.html","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otquestion/otquestion.component.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otresults/otresults.component.css","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otresults/otresults.component.html","c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otresults/otresults.component.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/environments/environment.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/hmr.ts","c:/Projects/OpenTrivia/OpenTriviaApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open-trivia-title {\\r\\n    color: white;\\r\\n    background: #984B43;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container text-center\\\">\\n  <h1 class=\\\"row justify-content-center open-trivia-title p-4 mb-3\\\">\\n    {{ title }}\\n  </h1>\\n  <app-otquestion></app-otquestion>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { OpenTriviaDbService } from \"./open-trivia-db.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [OpenTriviaDbService]\n})\nexport class AppComponent {\n  title = 'Open Trivia Demo';\n\n  constructor() {}\n}\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material';\n\nimport { OtmenuComponent } from './otmenu/otmenu.component';\nimport { OtquestionComponent } from './otquestion/otquestion.component';\nimport { OtresultsComponent } from './otresults/otresults.component';\nimport { OpenTriviaDbService } from \"./open-trivia-db.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OtmenuComponent,\n    OtquestionComponent,\n    OtresultsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    HttpModule,\n    NgbModule.forRoot()\n  ],\n  providers: [OpenTriviaDbService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class OpenTriviaDbService {\n  \n  private baseUrl:          string = 'https://opentdb.com/';\n  private questionEndpoint: string = 'api.php';\n  private tokenEndpoint:    string = 'api_token.php';\n  private categoryEndpoint: string = 'api_category.php';\n\n  constructor(private http: Http) { }\n\n  getToken(): Observable<TokenResponse> {\n    let tokenUrl: string = this.baseUrl +\n                           this.tokenEndpoint +\n                           '?command=request';\n    \n    return this.http.get(tokenUrl)\n      .map(res => res.json() as TokenResponse);\n  }\n\n  categories(): Observable<TriviaCategories> {\n    let categoryUrl: string = this.baseUrl +\n                              this.categoryEndpoint;\n\n    return this.http.get(categoryUrl)\n      .map(res => res.json() as TriviaCategories);\n  }\n\n  getQuestion(token: string,\n              category: number,\n              difficulty: string,\n              type: string): Observable<Questions> {\n    \n                let questionUrl: string = this.baseUrl +\n                              this.questionEndpoint;\n    let queryParams = this.formatQueryParams(token,\n                                             category,\n                                             difficulty,\n                                             type);\n\n    return this.http.get(questionUrl + queryParams)\n      .map(res => res.json() as Questions);\n  }\n\n  formatQueryParams(token: string,\n                    category: number,\n                    difficulty: string,\n                    type: string): string{\n    \n    let queryParams = \"?amount=1&token=\" + token;\n\n    if (undefined != category) {\n      queryParams += \"&category=\" + category;\n    }\n\n    if (undefined != difficulty) {\n      queryParams += \"&difficulty=\" + difficulty;\n    }\n\n    if (undefined != type) {\n      queryParams += \"&type=\" + type;\n    }\n\n    return queryParams;\n  }\n\n}\n\nexport interface TokenResponse {\n  response_code: number;\n  response_message: string;\n  token: string;\n}\n\nexport interface TriviaCategories {\n  trivia_categories: TriviaCategory[];\n}\n\nexport interface TriviaCategory {\n  id: number;\n  name: string;\n}\n\nexport interface Result {\n  category: string;\n  type: string;\n  difficulty: string;\n  question: string;\n  correct_answer: string;\n  incorrect_answers: string[];\n}\n\nexport interface Questions {\n  response_code: number;\n  results: Result[];\n}\n\n\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/open-trivia-db.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otmenu/otmenu.component.css\n// module id = ../../../../../src/app/otmenu/otmenu.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-4 pt-2 pb-2\\\">\\n    \\n    <span *ngIf=\\\"!categories\\\"><em>Loading...</em></span>\\n    \\n    <div ngbDropdown \\n         class=\\\"d-inline-block\\\"\\n         *ngIf=\\\"categories\\\">\\n      <button class=\\\"btn btn-outline-secondary\\\" id=\\\"catDrop\\\" ngbDropdownToggle>\\n        Category\\n      </button>\\n      <div ngbDropdownMenu aria-labelledby=\\\"catDrop\\\">\\n        <button class=\\\"dropdown-item\\\"\\n                (click)=\\\"setCategory(0)\\\">\\n          Any\\n        </button>\\n        <button class=\\\"dropdown-item\\\"\\n                *ngFor=\\\"let category of categories\\\"\\n                (click)=\\\"setCategory(category.id)\\\">\\n          {{ category.name }}\\n        </button>\\n      </div>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"col-sm-4 pt-2 pb-2\\\">\\n\\n    <div ngbDropdown \\n         class=\\\"d-inline-block\\\">\\n      <button class=\\\"btn btn-outline-secondary\\\" id=\\\"catDrop\\\" ngbDropdownToggle>\\n        Difficulty\\n      </button>\\n      <div ngbDropdownMenu aria-labelledby=\\\"catDrop\\\">\\n        <button class=\\\"dropdown-item\\\"\\n                *ngFor=\\\"let difficulty of difficulties\\\"\\n                (click)=\\\"setDifficulty(difficulty.Value)\\\">\\n          {{ difficulty.Name }}\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"col-sm-4 pt-2 pb-4\\\">\\n\\n    <div ngbDropdown \\n         class=\\\"d-inline-block\\\">\\n      <button class=\\\"btn btn-outline-secondary\\\" id=\\\"catDrop\\\" ngbDropdownToggle>\\n        Type\\n      </button>\\n      <div ngbDropdownMenu aria-labelledby=\\\"catDrop\\\">\\n        <button class=\\\"dropdown-item\\\"\\n                *ngFor=\\\"let type of types\\\"\\n                (click)=\\\"setType(type.Value)\\\">\\n          {{ type.Name }}\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otmenu/otmenu.component.html\n// module id = ../../../../../src/app/otmenu/otmenu.component.html\n// module chunks = main","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { OpenTriviaDbService, TriviaCategory } from '../open-trivia-db.service';\n\n@Component({\n  selector: 'app-otmenu',\n  templateUrl: './otmenu.component.html',\n  styleUrls: ['./otmenu.component.css']\n})\nexport class OtmenuComponent implements OnInit {\n\n  @Output() onCatagorySelect   = new EventEmitter<number>();\n  @Output() onDifficultySelect = new EventEmitter<string>();\n  @Output() onTypeSelect       = new EventEmitter<string>();\n\n  categories: TriviaCategory[];\n  \n  difficulties = [ { Name: \"Any\",    Value: \"any\" },\n                   { Name: \"Easy\",   Value: \"easy\" },\n                   { Name: \"Medium\", Value: \"medium\" },\n                   { Name: \"Hard\",   Value: \"hard\" } ];\n  \n  types = [ { Name: \"Any\",             Value: \"any\" },\n            { Name: \"Multiple Choice\", Value: \"multiple\" },\n            { Name: \"True / False\",    Value: \"boolean\" } ];\n\n  constructor(private openTriviaDB: OpenTriviaDbService) { }\n\n  ngOnInit() {\n    this.openTriviaDB.categories()\n      .subscribe(res => {\n        this.categories = res.trivia_categories },\n        error => console.error(error));\n  }\n\n  setCategory(id: number){\n    this.onCatagorySelect.emit(id);\n  }\n\n  setDifficulty(difficulty: string){\n    this.onDifficultySelect.emit(difficulty);\n  }\n\n  setType(type: string){\n    this.onTypeSelect.emit(type);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otmenu/otmenu.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hand {\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n}\\r\\n\\r\\n.hand:hover {\\r\\n  background-color:  rgba(52, 138, 199, 0.44) !important;\\r\\n}\\r\\n\\r\\n.hand-selected {\\r\\n  background-color:  rgba(52, 138, 199, 0.44) !important;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otquestion/otquestion.component.css\n// module id = ../../../../../src/app/otquestion/otquestion.component.css\n// module chunks = main","module.exports = \"<app-otmenu (onCatagorySelect)=\\\"onCatagorySelect($event)\\\"\\n            (onDifficultySelect)=\\\"onDifficultySelect($event)\\\"\\n            (onTypeSelect)=\\\"onTypeSelect($event)\\\"></app-otmenu>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12 pt-2 pb-2\\\">\\n    <strong class=\\\"mr-3\\\">Question:</strong>\\n    <span *ngIf=\\\"!question\\\"><em>Loading...</em></span>\\n    <span *ngIf=\\\"question\\\">\\n      {{ question }}\\n    </span>\\n  </div>\\n  <hr class=\\\"col ml-4 mr-4 h-5 bg-dark\\\">\\n  <div class=\\\"col-12 mt-3 mb-3\\\">\\n    <span *ngIf=\\\"!answers\\\"><em>Loading...</em></span>\\n    <ul class=\\\"list-unstyled\\\"\\n        *ngIf=\\\"answers\\\">\\n      <li class=\\\"m-3\\\"\\n          *ngFor=\\\"let answer of answers\\\">\\n        <div id=\\\"{{ answer.answerId }}\\\"\\n             class=\\\"{{ baseClass }}\\\"\\n             (click)=\\\"selectAnswer($event)\\\">\\n          {{ answer.answerText }}\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <hr class=\\\"col ml-4 mr-4 h-5 bg-dark\\\">\\n</div>\\n\\n<div class=\\\"row justify-content-center pt-4\\\">\\n    <!-- <button mat-raised-button class=\\\"col-sm-4 mr-md-3 mb-3 p-2\\\"\\n                              (click)=\\\"checkAnswer()\\\">Am I Right</button> -->\\n    <ngb-alert [dismissible]=\\\"false\\\" *ngIf=\\\"alert\\\">{{ alert }}</ngb-alert>\\n    <button mat-raised-button class=\\\"col-sm-4 mb-3 p-2\\\"\\n                              (click)=\\\"nextQuestion()\\\">Next Question</button>\\n</div>\\n\\n<app-otresults (onReset)=\\\"onReset($event)\\\"></app-otresults>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otquestion/otquestion.component.html\n// module id = ../../../../../src/app/otquestion/otquestion.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { OtresultsComponent } from \"../otresults/otresults.component\";\nimport { OpenTriviaDbService, TokenResponse, Questions } from '../open-trivia-db.service';\n\n@Component({\n  selector: 'app-otquestion',\n  templateUrl: './otquestion.component.html',\n  styleUrls: ['./otquestion.component.css']\n})\nexport class OtquestionComponent implements OnInit {\n\n  @ViewChild(OtresultsComponent)\n  private otResults: OtresultsComponent;\n\n  private tokenResponse: TokenResponse;\n  private questions: Questions; \n  \n  private categoryId: number;\n  private difficulty: string;\n  private type: string;\n\n  private selectedElement;\n  baseClass = \"hand border rounded p-2\";\n  selectedClass = \"hand hand-selected border rounded p-2\";\n  selectedCorrectClass = \"hand hand-selected border border-success rounded p-2\";\n  selectedWrongClass = \"hand hand-selected border border-danger rounded p-2\"\n  correctClass = \"hand border border-success rounded p-2\";\n  selectedAnswerId;\n  correctAnswerId;\n\n  alert: string;\n  question: string;\n  answers: any;\n\n  constructor(private openTriviaDB: OpenTriviaDbService) { }\n\n  ngOnInit() {\n    this.getToken();\n  }\n\n  getToken(){\n    this.openTriviaDB.getToken()\n    .subscribe(res => {\n      this.tokenResponse = res;\n      this.nextQuestion() },\n      error => console.error(error));\n  }\n\n  selectAnswer(event: MouseEvent) {\n    if (undefined != this.selectedElement) {\n      return;\n    }\n\n    this.selectedElement = event.srcElement;\n    this.selectedElement.className = this.selectedClass;\n\n    this.selectedAnswerId = this.selectedElement.id;\n\n    this.checkAnswer();\n  }\n\n  checkAnswer(){\n    if (this.selectedAnswerId == this.correctAnswerId) {\n      this.otResults.correctAnswer();\n      this.markAnswerCorrect(this.selectedElement);\n    }\n    else {\n      this.otResults.wrongAnswer();\n      this.markAnswerWrong(this.selectedElement);\n    }\n  }\n\n  markAnswerCorrect(selection){\n    selection.className = this.selectedCorrectClass;\n  }\n\n  markAnswerWrong(selection){\n    selection.className = this.selectedWrongClass;\n\n    var grandParent = selection.parentElement.parentElement.children;\n    for (var index = 0; index < grandParent.length; index++) {\n      var parent = grandParent[index].children;\n      for (var index2 = 0; index2 < parent.length; index2++) {\n        var question = parent[index2];\n        if (this.correctAnswerId == question.id) {\n          question.className = this.correctClass;          \n        }\n      }\n    }\n  }\n\n  nextQuestion(){\n    this.openTriviaDB.getQuestion(this.tokenResponse.token,\n                                  this.categoryId,\n                                  this.difficulty,\n                                  this.type)\n      .subscribe(res => {\n        this.questions = res;\n        this.formatQuestion() }, \n        error => console.error(error));\n\n    this.selectedElement = undefined;\n    this.selectedAnswerId = undefined;\n  }\n\n  formatQuestion(){\n\n    if (0 != this.questions.response_code) {\n      this.setAlert(this.questions.response_code);  \n    }\n    else {\n      this.alert = undefined;\n    }\n\n    this.question = this.unescape(this.questions.results[0].question);\n    let correctAnswer = this.questions.results[0].correct_answer;\n    let wrongAnswers = this.questions.results[0].incorrect_answers;\n    this.answers = this.formatAnswers(correctAnswer, wrongAnswers)\n  }\n\n  setAlert(resCode){\n    switch (resCode) {\n      case 1:\n        this.alert = \"No Results Could not return results. The API doesn't have enough questions for your query.\";\n        break;\n    \n      case 2:\n        this.alert = \"Invalid Parameter Contains an invalid parameter. Arguements passed in aren't valid.\";\n        break;\n\n      case 3:\n        this.alert = \"Token Not Found Session Token does not exist.\";\n        break;\n\n      case 4:\n        this.alert = \"Token Empty Session Token has returned all possible questions for the specified query. Resetting the Token is necessary.\";\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  formatAnswers(correctAnswer, wrongAnswers){\n\n    let numberAnswers = wrongAnswers.length + 1;\n    let answers: Array<any> = new Array(numberAnswers);    \n    let correctId: number; //default zero for true/false questions\n    \n    if (correctAnswer == \"True\"){\n      correctId = 0;\n    }\n    else if (correctAnswer == \"False\") {\n      correctId = 1;\n    }\n    else {\n      correctId = Math.floor((Math.random() * numberAnswers));\n    }\n\n    this.correctAnswerId = correctId;\n\n    for (var index = 0; index < numberAnswers; index++) {\n      if (index == correctId) {\n        answers[index] = { answerId: index,\n                           answerText: this.unescape(correctAnswer),\n                           correct: true };\n      } else {\n        if (index < correctId) {\n          answers[index] = { answerId: index,\n                             answerText: this.unescape(wrongAnswers[index]),\n                             correct: false };        \n        } else {\n          answers[index] = { answerId: index,\n                             answerText: this.unescape(wrongAnswers[index -1]),\n                             correct: false };        \n        }\n      }\n    }\n    \n    return answers;\n  }\n\n  unescape(input){\n    var e = document.createElement('div');\n    e.innerHTML = input;\n    // handle case of empty input\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n  }\n\n  onCatagorySelect(event){\n    if (0 == event) {\n      this.categoryId = undefined;\n    }\n    else {\n      this.categoryId = event;      \n    }\n  }\n\n  onDifficultySelect(event){\n    if (\"any\" == event) {\n      this.difficulty = undefined;\n    }\n    else {\n      this.difficulty = event;      \n    }\n  }\n\n  onTypeSelect(event){\n    if (\"any\" == event) {\n      this.type = undefined;\n    }\n    else {\n      this.type = event;      \n    }\n  }\n\n  onReset(event){\n    if (event) {\n      this.categoryId = undefined;\n      this.difficulty = undefined;\n      this.type = undefined;\n      this.selectedElement = undefined;\n      this.selectedAnswerId = undefined;\n      this.alert = undefined;\n      this.getToken();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otquestion/otquestion.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otresults/otresults.component.css\n// module id = ../../../../../src/app/otresults/otresults.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row justify-content-center mb-3\\\">\\n  <div  class=\\\"col-sm-4\\\">\\n    <strong class=\\\"mr-3\\\">Correct Answers:</strong>\\n    <span>{{ correctAnswers }}</span>\\n  </div>\\n  <div class=\\\"col-sm-4\\\">\\n      <strong class=\\\"mr-3\\\">Wrong Answers:</strong>\\n      <span>{{ wrongAnswers }}</span>      \\n  </div>\\n</div>\\n<div class=\\\"row justify-content-center\\\">\\n  <button mat-raised-button class=\\\"col-4 p-2 mb-3\\\"\\n                            (click)=\\\"reset()\\\">Reset</button>    \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otresults/otresults.component.html\n// module id = ../../../../../src/app/otresults/otresults.component.html\n// module chunks = main","import { Component, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-otresults',\n  templateUrl: './otresults.component.html',\n  styleUrls: ['./otresults.component.css']\n})\nexport class OtresultsComponent {\n\n  @Output() onReset = new EventEmitter<boolean>();\n\n  correctAnswers: number = 0;\n  wrongAnswers: number = 0;\n\n  constructor() { }\n\n  correctAnswer(){\n    this.correctAnswers += 1;\n  }\n\n  wrongAnswer(){\n    this.wrongAnswers += 1;\n  }\n\n  reset(){\n    this.correctAnswers = 0;\n    this.wrongAnswers = 0;\n\n    this.onReset.emit(true);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/app/otresults/otresults.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  hmr: false\n};\n\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/environments/environment.ts","import { NgModuleRef, ApplicationRef } from '@angular/core';\r\nimport { createNewHosts } from '@angularclass/hmr';\r\n\r\nexport const hmrBootstrap = (module: any, bootstrap: () => Promise<NgModuleRef<any>>) => {\r\n    let ngModule: NgModuleRef<any>;\r\n    module.hot.accept();\r\n    bootstrap().then(mod => ngModule = mod);\r\n    module.hot.dispose(() => {\r\n        const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\r\n        const elements = appRef.components.map(c => c.location.nativeElement);\r\n        const makeVisible = createNewHosts(elements);\r\n        ngModule.destroy();\r\n        makeVisible();\r\n    });\r\n};\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/hmr.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { hmrBootstrap } from './hmr';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\nif (environment.hmr) {\n  if (module[ 'hot' ]) {\n    hmrBootstrap(module, bootstrap);\n  } else {\n    console.error('HMR is not enabled for webpack-dev-server!');\n    console.log('Are you using the --hmr flag for ng serve?');\n  }\n} else {\n  bootstrap();\n}\n\n\n// WEBPACK FOOTER //\n// c:/Projects/OpenTrivia/OpenTriviaApp/src/main.ts"],"sourceRoot":"webpack:///"}